# This is a Packer template in an enhanced YAML format
# It will be transformed into Packer-compatible JSON format by using a ruby
# script.

variables:
  vm_name: "{{ env `VM_NAME` }}"
  arch: "amd64"
  iso_url: "{{ env `VM_INSTALL_ISO` }}"
  iso_checksum_type: "none"
  iso_checksum: ""
  use_disk_image: "false"
  output_directory: "{{ env `VM_DIR` }}"
  virtio_win_iso: "{{ env `VM_VIRTIO_ISO` }}"
  winrm_username: "vagrant"
  winrm_password: "vagrant"
  winrm_timeout: "6h"
  disk_size: "20000"
  memory: "4096"
  cpus: "2"
  http_directory: "http"
  shutdown_command: "shutdown /s /t 0 /f"
  superuser_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""

builders:
  - type: "qemu"
    vm_name: "{{ user `vm_name` }}"
    iso_url: "{{ user `iso_url` }}"
    iso_checksum_type: "{{ user `iso_checksum_type` }}"
    iso_checksum: "{{ user `iso_checksum` }}"
    output_directory: "{{ user `output_directory` }}"
    # set to true when an already existing disk image is reused
    disk_image: "{{ user `use_disk_image` }}"
    use_backing_file: "{{ user `use_disk_image` }}"

    http_directory: "{{ user `http_directory` }}"
    communicator: "winrm"
    winrm_username: "{{ user `winrm_username` }}"
    winrm_password: "{{ user `winrm_password` }}"
    winrm_timeout: "{{ user `winrm_timeout` }}"

    floppy_files: [
      "{{ user `arch` }}/Autounattend.xml",
      "scripts/unattend-winrm.ps1"
    ]

    format: "qcow2"
    net_device: "virtio-net"
    disk_interface: "virtio"
    disk_size: "{{ user `disk_size` }}"
    # disk usage optimizations (unmap zeroes as free space)
    disk_discard: unmap
    disk_detect_zeroes: unmap

    qemuargs:
      - ["-m", "{{ user `memory` }}"]
      - ["-smp", "{{ user `cpus` }}"]
      - ["-drive", "file={{ user `virtio_win_iso` }},media=cdrom,index=3"]
      - ["-drive", "file={{ user `output_directory` }}/{{ .Name }},if=virtio,cache=writeback,discard=unmap,format=qcow2,index=1"]

    shutdown_command: "exit 0"
    shutdown_timeout: "30m"

provisioners:
  - type: "file"
    source: "scripts/machine/"
    destination: "C:/Windows/vmfiles"
  - type: "powershell"
    elevated_user: "vagrant"
    elevated_password: "vagrant"
    scripts:
      - "scripts/update.ps1"
      - "scripts/tweaks.ps1"
      - "scripts/virt-drivers.ps1"
    valid_exit_codes: [0, 259]

  - type: "windows-restart"
    restart_timeout: "4h"  # windows update FTW

  - type: "powershell"
    execute_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
    scripts:
      - "scripts/chocolatey.ps1"
      - "scripts/msys-tweaks.ps1"

  - type: "windows-restart"
    restart_timeout: "60m"

  - type: "powershell"
    execute_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
    scripts:
      - "scripts/cleanup.ps1"

  - type: "powershell"
    execute_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
    scripts:
      - "scripts/sysprep.ps1"

"post-processors":
  - type: "vagrant"
    keep_input_artifact: true
    output: "{{ user `output_directory` }}/{{ user `vm_name` }}-{{.Provider}}.box"
    compression_level: "9"
    vagrantfile_template: "Vagrantfile.template"

# the end
