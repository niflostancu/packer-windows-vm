# This is a Packer template in an enhanced YAML format
# It will be transformed into Packer-compatible JSON format by using a python
# script.

variables:
  vm_name: "{{ env `VM_NAME` }}"
  arch: "amd64"
  iso_url: "{{ env `SOURCE_IMAGE` }}"
  iso_checksum: "none"
  disk_size: "20000"
  memory: "3072"
  cpus: "2"
  use_backing_file: ''
  virtio_win_iso: "{{ env `VIRTIO_INSTALL_ISO` }}"
  output_directory: "{{ env `OUTPUT_DIR` }}"
  winrm_username: "vagrant"
  winrm_password: "vagrant"
  winrm_timeout: "6h"
  http_directory: "base/http/"
  shutdown_command: "shutdown /s /t 0 /f"
  superuser_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
  vm_debug: ''

builders:
  - type: "qemu"
    vm_name: "{{ user `vm_name` }}.qcow2"
    iso_url: "{{ user `iso_url` }}"
    iso_checksum: "{{ user `iso_checksum` }}"
    output_directory: "{{ user `output_directory` }}"

    # VM Configuration
    memory: "{{ user `memory` }}"
    cpus: "{{ user `cpus` }}"
    disk_image: "{{ user `use_backing_file` }}"
    use_backing_file: "{{ user `use_backing_file` }}"
    format: "qcow2"
    net_device: "virtio-net"
    disk_interface: "virtio"
    disk_size: "{{ user `disk_size` }}"
    # disk usage optimizations (unmap zeroes as free space)
    disk_discard: unmap
    disk_detect_zeroes: unmap
    skip_compaction: true  # not required anymore
    qemuargs:
      - ["-vga", "none"]
      - ["-device", "qxl-vga,vgamem_mb=32"]
      - ["-usb"]
      - ["-device", "usb-tablet"]
      - ["-drive", "file={{ user `virtio_win_iso` }},media=cdrom,index=3"]
      - ["-drive", "file={{ user `output_directory` }}/{{ .Name }},if=virtio,cache=writeback,discard=unmap,format=qcow2,detect-zeroes=unmap"]

    http_directory: "{{ user `http_directory` }}"

    communicator: "winrm"
    winrm_username: "{{ user `winrm_username` }}"
    winrm_password: "{{ user `winrm_password` }}"
    winrm_timeout: "{{ user `winrm_timeout` }}"

    shutdown_command: "{{ user `shutdown_command` }}"
    shutdown_timeout: "30m"

provisioners:
  - type: "file"
    source: "vm/scripts/machine/"
    destination: "C:/Windows/vmfiles"

  - type: "powershell"
    elevated_user: "vagrant"
    elevated_password: "vagrant"
    execute_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
    scripts:
      - "vm/scripts/10-tweaks.ps1"
      - "vm/scripts/15-virt-drivers.ps1"
    valid_exit_codes: [0, 259]  # reboot scheduled, may exit with 259

  # restart after virt drivers
  - type: "windows-restart"
    restart_timeout: "60m"

  # continue with the scripts
  - type: "powershell"
    elevated_user: "vagrant"
    elevated_password: "vagrant"
    execute_command: "powershell -ExecutionPolicy Bypass -Command \"{{.Path}}\""
    scripts:
      - "vm/scripts/30-chocolatey.ps1"
      - "vm/scripts/35-msys.ps1"
      - "vm/scripts/90-cleanup.ps1"
      # - "scripts/sysprep.ps1"

# the end
